/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.coolmarch.cmnew.symboltree;

import cmnew.InterfaceMain2;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import net.coolmarch.cmnew.common.StringStringPair;
import net.coolmarch.cmnew.mchart.PnlChartMain;
import net.coolmarch.cmnew.res.CMResource;
import net.coolmarch.cmnew.tickanalysis.PnlIntradayDailyQuote;

/**
 *
 * @author salam
 */
public class PSymbolExplorer extends javax.swing.JPanel {

    /**
     * Creates new form PSymbolExplorer
     */
    private JTree sectorTree;

    public PSymbolExplorer() {
        initComponents();
        setTree();
    }

    public void setTree() {
        CMResource cmr = new CMResource();
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("PSX");
        SectorInformation si = new SectorInformation();
        ArrayList<String> categoryList = new ArrayList<>();
        categoryList.add("Top-30");
        categoryList.add("Oil and Gas");
        categoryList.add("Cement");
        categoryList.add("Banking");
        categoryList.add("Chemicals");
        categoryList.add("General Industries");
        categoryList.add("Electricity");
        categoryList.add("Automobiles");
        categoryList.add("Services");
        categoryList.add("Textile");
        categoryList.add("Financial Services");
        categoryList.add("Other");

        for (int i = 0; i <= categoryList.size() - 1; i++) {
            String category = categoryList.get(i);
            DefaultMutableTreeNode categoryNode = new DefaultMutableTreeNode(category);

            ArrayList<String> sectorList = si.getSectorList(category);
            for (String s : sectorList) {
                DefaultMutableTreeNode sectorNode = new DefaultMutableTreeNode(s);
                categoryNode.add(sectorNode);

                ArrayList<StringStringPair> sspList = si.getSymbolList(s);
                Collections.reverse(sspList);
                for (Iterator<StringStringPair> it = sspList.iterator(); it.hasNext();) {
                    StringStringPair ssp = it.next();
                    String symbol_code = ssp.getString1();
                    String symbol_name = ssp.getString2();
                    DefaultMutableTreeNode child = new DefaultMutableTreeNode(symbol_code);
                    sectorNode.add(child);

                    cmbCode.addItem((String) symbol_code);
                }
            }

            root.add(categoryNode);
        }

        sectorTree = new JTree(root);
        sectorTree.setCellRenderer(new MyCellRenderer());

        sectorTree.addTreeSelectionListener(new TreeSelectionListener() {
            public void valueChanged(TreeSelectionEvent e) {
                DefaultMutableTreeNode node
                        = (DefaultMutableTreeNode) sectorTree.getLastSelectedPathComponent();

                /* if nothing is selected */
                if (node == null) {
                    return;
                } else if (node.isLeaf()) {

                    /* retrieve the node that was selected */
                    Object nodeInfo = node.getUserObject();
                    String item = (String) nodeInfo;
                    cmbCode.setSelectedItem(item);
                }
            }
        });

        sectorTree.setOpaque(false);

        add(new JScrollPane(sectorTree));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmbCode = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        tfProgress = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 204));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Daily");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Tick");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tfProgress.setEditable(false);
        tfProgress.setText("Select from tree / dropdown list");
        tfProgress.setBorder(null);
        tfProgress.setDisabledTextColor(new java.awt.Color(0, 0, 51));
        tfProgress.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfProgress)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmbCode, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new Thread() {
            public void run() {
                tfProgress.setText("Please wait...");
               // tfProgress.update(tfProgress.getGraphics());
               // tfProgress.validate();
                PnlChartMain pcm = new PnlChartMain((String) cmbCode.getSelectedItem());
                String title = (String)cmbCode.getSelectedItem();
//                title+=title;
                InterfaceMain2.mainTab.addTab("D:"+(String) cmbCode.getSelectedItem(), pcm);
                tfProgress.setText("Select From Tree/Dropdown List");
            }
        }.start();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        tfProgress.setText("Please wait...");
        tfProgress.update(tfProgress.getGraphics());
        tfProgress.validate();

        PnlIntradayDailyQuote pcm = new PnlIntradayDailyQuote((String) cmbCode.getSelectedItem());
        InterfaceMain2.mainTab.addTab("T:" + (String) cmbCode.getSelectedItem(), pcm);
        tfProgress.setText("Select From Tree/Dropdown List");

    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbCode;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField tfProgress;
    // End of variables declaration//GEN-END:variables
}
